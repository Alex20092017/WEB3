pragma solidity ^0.8.0;

contract Voting {
    struct Candidate {
        uint id;
        string name;
        uint voteCount;
    }

    mapping (uint => Candidate) public candidates;
    uint public candidatesCount;

    constructor() {
        addCandidate("Candidate 1");
        addCandidate("Candidate 2");
    }

    function addCandidate(string memory name) private {
        candidates[candidatesCount] = Candidate(candidatesCount, name, 0);
        candidatesCount++;
    }

    function vote(uint candidateId) public {
        require(candidateId < candidatesCount, "Candidate does not exist");

        candidates[candidateId].voteCount++;
    }

    function getCandidateVoteCount(uint candidateId) public view returns (uint) {
        require(candidateId < candidatesCount, "Candidate does not exist");

        return candidates[candidateId].voteCount;
    }
}
